[{"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js":"1","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js":"2","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js":"3","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js":"4","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx":"5","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx":"6","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx":"7","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx":"8","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx":"9","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx":"10","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx":"11","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx":"12","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js":"13","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx":"14","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js":"15"},{"size":594,"mtime":1613414079219,"results":"16","hashOfConfig":"17"},{"size":1443,"mtime":1613410909167,"results":"18","hashOfConfig":"17"},{"size":697,"mtime":1613410909184,"results":"19","hashOfConfig":"17"},{"size":648,"mtime":1613410909182,"results":"20","hashOfConfig":"17"},{"size":2796,"mtime":1613413262855,"results":"21","hashOfConfig":"17"},{"size":119,"mtime":1613410909202,"results":"22","hashOfConfig":"17"},{"size":5245,"mtime":1613410909221,"results":"23","hashOfConfig":"17"},{"size":4982,"mtime":1613414723891,"results":"24","hashOfConfig":"17"},{"size":453,"mtime":1613410909230,"results":"25","hashOfConfig":"17"},{"size":395,"mtime":1613410909204,"results":"26","hashOfConfig":"17"},{"size":3638,"mtime":1613410909200,"results":"27","hashOfConfig":"17"},{"size":1040,"mtime":1613410909198,"results":"28","hashOfConfig":"17"},{"size":2854,"mtime":1613413138314,"results":"29","hashOfConfig":"17"},{"size":803,"mtime":1613410909179,"results":"30","hashOfConfig":"17"},{"size":152,"mtime":1613412462620,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kt3c47",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js",["73","74","75"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useSelector, useDispach} from 'react-redux';\nimport LogInPage from './pages/LogInPage'\nimport SignUpPage from './pages/SignUpPage'\nimport DashboardPage from './pages/DashboardPage'\nimport TestPage from './pages/TestPage'\nimport ChangePassword from './pages/ChangePassword'\nimport E404Page from './pages/E404Page'\nimport ForgotPage from './pages/ForgotPage'\nimport ActivateAccount from './pages/ActivateAccount'\n\nfunction App() {\n  // const Login = useSelector(ShowLogIn);\n  // const isCoursesHidden = useSelector(ShowCourses);\n \n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"body\">\n          <Switch>\n            <Route path=\"/\" exact component={LogInPage} />\n            <Route path=\"/ch/:id/:token\" exact component={ChangePassword} />\n            <Route path=\"/a/:id/:token\" exact component={ActivateAccount} />\n\n            <Route path=\"/404\" exact component={E404Page} />\n\n            <Route path=\"/sign-up\" exact component={SignUpPage} />\n            <Route path=\"/sign-in\" exact component={LogInPage} />\n            <Route path=\"/reset-password\" exact component={ForgotPage} />\n            <Route path=\"/dashboard\" exact component={DashboardPage}/>\n            \n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["76","77"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js",["78","79"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport global from './Global';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, global);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx",["80","81","82"],"import React, {useState, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {\n  setUserSpare1byEmail,\n  sendMail,\n  generateUserSpare1ByEmail,\n} from '../API/API';\n\nvar sha256 = require ('js-sha256');\n\nexport default function ForgotPage () {\n  const [email, setEmail] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n\n    generateUserSpare1ByEmail (email).then (res => {\n      if (res.data) {\n        const userId = res.data.id;\n        const newToken = res.data.spare1;\n\n        const url = `http://csclientserverapp.herokuapp.com/ch/${userId}/${newToken}`;\n        const to = email;\n        const subject = 'Recovery Email';\n        const text = `Click on this link to reset your password: ${url}`;\n        const onSuccess = e => {\n         \n        };\n        sendMail (to, subject, text, onSuccess);\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n        alertRef.current.showAlert ();\n      } else {\n        console.log (\"email is not valid, don't tell the user...\");\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n    }\n    });\n  };\n  function validateForm () {\n    return email.length > 0;\n  }\n\n  const alertRef = useRef ();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Player\n          src=\"https://assets4.lottiefiles.com/packages/lf20_IQ2Fuq.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          loop\n          autoplay\n          style={{height: '300px', width: '300px'}}\n        />\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        <div className=\" d-flex flex-column align-items-md-center\">\n          <h3 className=\"mt-5 mb-5\">Reset Password</h3>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => setEmail (e.target.value)}\n            />\n          </div>\n\n          <button\n            disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n          >\n            Send reset email\n          </button>\n\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"/sign-in\">sign in?</a>\n          </p>\n        </div>\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx",["83","84"],"import React, {useState, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {doesEmailExists, register, sendMail} from '../API/API';\nvar sha256 = require ('js-sha256');\n\nexport default function SignUpPage () {\n  const [fname, setFname] = useState ('');\n  const [lname, setLname] = useState ('');\n  const [email, setEmail] = useState ('');\n  const [password, setPassword] = useState ('');\n  const [repeatedPassword, setRepeatedPassword] = useState ('');\n  const [promoCode, setPromoCode] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n\n    if (password !== repeatedPassword) {\n      setAlertType ('warning');\n      setAlertHeading ('Incorrect Password');\n      setAlertBody (\"Passwords don't match!\");\n      alertRef.current.showAlert ();\n      return;\n    }\n    // check if already exists\n    doesEmailExists (email).then (res => {\n      if (res.data.length != 0) {\n        // user already exists\n        setAlertType ('warning');\n        setAlertHeading ('User Exists');\n        setAlertBody (\n          'There is already an account registered with this email!'\n        );\n        alertRef.current.showAlert ();\n      } else {\n        // register\n\n        register (\n          fname,\n          lname,\n          email,\n          sha256 (password),\n          promoCode\n        ).then (res => {\n\n          setAlertType ('success');\n          setAlertHeading ('Success');\n          setAlertBody ('Registeration has been completed successfully!');\n          alertRef.current.showAlert ();\n\n          // send activation mail\n\n          const userId = res.data.id;\n          const token = res.data.spare2;\n\n          const url = `http://localhost:3000/a/${userId}/${token}`;\n          const to = email;\n          const subject = 'Activation Email';\n          const text = `Click on this link to activate your account: ${url}`;\n          const onSuccess = e => {};\n          sendMail (to, subject, text, onSuccess);\n          setAlertType ('success');\n          setAlertHeading ('Success');\n          setAlertBody ('Check your email for an activation link');\n        });\n      }\n    });\n  };\n  function validateForm () {\n    return (\n      fname.length > 0 &&\n      lname.length > 0 &&\n      email.length > 0 &&\n      password.length > 0 &&\n      repeatedPassword.length > 0 &&\n      promoCode.length > 0\n    );\n  }\n\n  const alertRef = useRef ();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Player\n          src=\"https://assets5.lottiefiles.com/packages/lf20_wd1udlcz.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          loop\n          autoplay\n          style={{height: '300px', width: '300px'}}\n        />\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        <div className=\" d-flex flex-column align-items-md-center\">\n          <h3 className=\"mt-5 mb-5\">Sign Up</h3>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First name\"\n              onChange={e => setFname (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              onChange={e => setLname (e.target.value)}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Last name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => setEmail (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              onChange={e => setPassword (e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Repeat password\"\n              onChange={e => setRepeatedPassword (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Have a promo code\"\n              onChange={e => setPromoCode (e.target.value)}\n            />\n          </div>\n\n          <button\n            disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n          >\n            Sign Up\n          </button>\n          <p className=\"forgot-password text-right\">\n            <a href=\"/reset-password\">Forgot Password?</a>\n          </p>\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"/sign-in\">sign in?</a>\n          </p>\n        </div>\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx",["85","86","87","88","89","90"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx",["91","92","93","94","95"],"import React, {useEffect} from 'react';\nimport {sendMail} from '../API/API';\nexport default function TestPage () {\n  \nuseEffect (() => {\n    const to = 'bshara23@gmail.com';\n    const subject = 'This is a test email';\n    const text = 'this is the content';\n    const onSuccess = e => {\n      console.log ('on success', e);\n    };\n    //sendMail (to, subject, text, onSuccess);\n  }, []);\n\n  return (\n    <div>\n      <h1>Test Page</h1>\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx",["96"],"import React from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\n\nexport default function E404Page () {\n  return (\n    <div>\n      <Player\n        src=\"https://assets7.lottiefiles.com/temp/lf20_USCruP.json\"\n        background=\"transparent\"\n        speed=\"1\"\n        loop\n        autoplay\n        style={{height: '500px', width: '500px'}}\n      />\n\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx",["97","98"],"import React, {useEffect, useState, useRef} from 'react';\nimport {getUserSpare1, updatePasswordByToken, setUserSpare1} from '../API/API';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {useHistory} from 'react-router-dom';\nvar sha256 = require ('js-sha256');\n\nexport default function ChangePassword({match}) {\n  const alertRef = useRef ();\n  const history = useHistory ();\n\n  const [allow, setAllow] = useState (false);\n\n  const [password, setPassword] = useState ('');\n  const [repeatedPassword, setRepeatedPassword] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log (match);\n    getUserSpare1 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare1;\n        if (token === userToken) {\n          // token is valid\n          setAllow (true);\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    if (password !== repeatedPassword) {\n      setAlertType ('warning');\n      setAlertHeading ('Incorrect Password');\n      setAlertBody (\"Passwords don't match!\");\n      alertRef.current.showAlert ();\n      return;\n    }\n    updatePasswordByToken (userId, userToken, sha256(password)).then (res => {\n      if (res.data == 1) {\n        // password changed\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Password has been changed successfuly!');\n        alertRef.current.showAlert ();\n        setAllow (false);\n        // delete token\n        setUserSpare1 (userId, null).then (res => {\n          setTimeout (() => {\n            // redirect to log in\n            history.push ('/sign-in');\n        }, 1000);\n        });\n      } else {\n        // password didn't change\n        setAlertType ('warning');\n        setAlertHeading ('Error');\n        setAlertBody ('Ops, something went wrong!!');\n        alertRef.current.showAlert ();\n      }\n    });\n  };\n  function validateForm () {\n    return password.length > 0 && repeatedPassword.length > 0;\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        {allow &&\n          <div>\n\n            <div className=\" d-flex flex-column align-items-md-center\">\n              <h3 className=\"mt-5 mb-5\">Change Password</h3>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter password\"\n                  onChange={e => setPassword (e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Repeat password\"\n                  onChange={e => setRepeatedPassword (e.target.value)}\n                />\n              </div>\n\n              <button\n                disabled={!validateForm ()}\n                type=\"submit\"\n                className=\"btn btn-primary mt-3\"\n              >\n                Change Password\n              </button>\n            </div>\n\n          </div>}\n\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx",["99","100"],"import React, {useEffect, useState} from 'react';\nimport {getUserSpare2, setUserSpare2} from '../API/API';\nimport {useHistory} from 'react-router-dom';\nvar sha256 = require ('js-sha256');\n\nexport default function ActivateAccount({match}) {\n  const history = useHistory ();\n  const [allow, setAllow] = useState (false);\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log(userId, userToken);\n\n    getUserSpare2 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare2;\n        console.log(token, userToken);\n        if (token === userToken) {\n          setUserSpare2 (userId, 'Activated').then (res => {\n            setAllow (true);\n            setTimeout (() => {\n              history.push ('/sign-in');\n            }, 2000);\n          });\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      {allow && <h3>Account activated, redirecting...</h3>}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js",["101"],"const axios = require ('axios');\nconst nodemailer = require ('nodemailer');\n\nexport const API_URL = '';\nexport const logIn = async (email, password) => {\n  try {\n    return await axios\n      .get (API_URL + `/users/${email}/${password}`)\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const doesEmailExists = async email => {\n  try {\n    return await axios.get (API_URL + `/users/${email}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const register = async (\n  fname,\n  lname,\n  email,\n  password,\n  promoCode = ''\n) => {\n  try {\n    return await axios\n      .post (API_URL + `/users`, {\n        name: fname,\n        family_name: lname,\n        email,\n        promo_code: promoCode,\n        password,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const sendMail = async (to, subject, text) => {\n  try {\n    return await axios\n      .post (API_URL + `/sendMail`, {\n        to,\n        subject,\n        text,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const getUserSpare1 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare1/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare1 = async (id, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1`, {id, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\nexport const getUserSpare2 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare2/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare2 = async (id, spare2) => {\n  try {\n    return await axios.put (API_URL + `/spare2`, {id, spare2}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\n\nexport const setUserSpare1byEmail = async (email, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const generateUserSpare1ByEmail = async (email) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const updatePasswordByToken = async (id, spare1, newPassword) => {\n  try {\n    return await axios\n      .put (API_URL + `/updatePasswordByToken`, {\n        id,\n        spare1,\n        newPassword,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx",["102"],"import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport {Alert} from 'react-bootstrap';\nvar timeout = null;\nconst TemporaryAlert = (\n  {body, heading, type = 'success', showTime = 5000},\n  ref\n) => {\n  const [show, setShow] = useState(false);\n \n  useImperativeHandle(ref, () => ({\n    showAlert: () => {\n      setShow(true);\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        closeAlert();\n      }, showTime);\n    },\n  }));\n\n  const closeAlert = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      {show && (\n        <Alert variant={type} onClose={closeAlert} dismissible>\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p>{body}</p>\n        </Alert>\n      )}\n    </>\n  );\n};\nexport default forwardRef(TemporaryAlert);\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js",[],{"ruleId":"103","severity":1,"message":"104","line":4,"column":9,"nodeType":"105","messageId":"106","endLine":4,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":4,"column":22,"nodeType":"105","messageId":"106","endLine":4,"endColumn":32},{"ruleId":"103","severity":1,"message":"108","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":16},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"103","severity":1,"message":"113","line":3,"column":3,"nodeType":"105","messageId":"106","endLine":3,"endColumn":15},{"ruleId":"103","severity":1,"message":"114","line":13,"column":9,"nodeType":"105","messageId":"106","endLine":13,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"103","severity":1,"message":"116","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":23},{"ruleId":"103","severity":1,"message":"117","line":10,"column":5,"nodeType":"105","messageId":"106","endLine":10,"endColumn":11},{"ruleId":"103","severity":1,"message":"115","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":31,"column":27,"nodeType":"120","messageId":"121","endLine":31,"endColumn":29},{"ruleId":"103","severity":1,"message":"122","line":1,"column":26,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"103","severity":1,"message":"115","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"103","severity":1,"message":"123","line":10,"column":19,"nodeType":"105","messageId":"106","endLine":10,"endColumn":29},{"ruleId":"103","severity":1,"message":"124","line":25,"column":10,"nodeType":"105","messageId":"106","endLine":25,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":39,"column":27,"nodeType":"120","messageId":"121","endLine":39,"endColumn":29},{"ruleId":"118","severity":1,"message":"125","line":161,"column":38,"nodeType":"120","messageId":"121","endLine":161,"endColumn":40},{"ruleId":"103","severity":1,"message":"126","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"127","line":6,"column":11,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"103","severity":1,"message":"128","line":7,"column":11,"nodeType":"105","messageId":"106","endLine":7,"endColumn":18},{"ruleId":"103","severity":1,"message":"129","line":8,"column":11,"nodeType":"105","messageId":"106","endLine":8,"endColumn":15},{"ruleId":"103","severity":1,"message":"130","line":9,"column":11,"nodeType":"105","messageId":"106","endLine":9,"endColumn":20},{"ruleId":"103","severity":1,"message":"115","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":36,"column":6,"nodeType":"133","endLine":36,"endColumn":8,"suggestions":"134"},{"ruleId":"118","severity":1,"message":"125","line":50,"column":20,"nodeType":"120","messageId":"121","endLine":50,"endColumn":22},{"ruleId":"103","severity":1,"message":"117","line":4,"column":5,"nodeType":"105","messageId":"106","endLine":4,"endColumn":11},{"ruleId":"131","severity":1,"message":"135","line":32,"column":6,"nodeType":"133","endLine":32,"endColumn":8,"suggestions":"136"},{"ruleId":"103","severity":1,"message":"137","line":2,"column":7,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"122","line":2,"column":3,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispach' is defined but never used.","'TestPage' is defined but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'persistStore' is defined but never used.","'PersistGate' is defined but never used.","'Controls' is defined but never used.","'setUserSpare1byEmail' is defined but never used.","'sha256' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'SECRET_KEY' is defined but never used.","'isVerified' is assigned a value but never used.","Expected '===' and instead saw '=='.","'sendMail' is defined but never used.","'to' is assigned a value but never used.","'subject' is assigned a value but never used.","'text' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'match'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'match.params.token'. Either include them or remove the dependency array.",["141"],"'nodemailer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [history, match]",{"range":"146","text":"147"},"Update the dependencies array to be: [history, match.params.id, match.params.token]",{"range":"148","text":"149"},[1135,1137],"[history, match]",[935,937],"[history, match.params.id, match.params.token]"]