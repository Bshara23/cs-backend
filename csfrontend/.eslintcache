[{"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js":"1","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js":"2","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js":"3","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js":"4","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx":"5","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx":"6","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx":"7","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx":"8","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx":"9","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx":"10","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx":"11","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx":"12","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js":"13","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx":"14","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js":"15","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/SmartPasswordInput.jsx":"16","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/DoubleSmartPasswordInput.jsx":"17","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/Navbar.jsx":"18","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/BasicCard.jsx":"19","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ProfilePage.jsx":"20","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/Testor.jsx":"21","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PCsPage.jsx":"22","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PhonesPage.jsx":"23","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/About.jsx":"24"},{"size":776,"mtime":1613651001753,"results":"25","hashOfConfig":"26"},{"size":1991,"mtime":1613778730866,"results":"27","hashOfConfig":"26"},{"size":697,"mtime":1613410909184,"results":"28","hashOfConfig":"26"},{"size":648,"mtime":1613410909182,"results":"29","hashOfConfig":"26"},{"size":3429,"mtime":1613653717599,"results":"30","hashOfConfig":"26"},{"size":1594,"mtime":1613777942897,"results":"31","hashOfConfig":"26"},{"size":7744,"mtime":1613765766382,"results":"32","hashOfConfig":"26"},{"size":7070,"mtime":1613778759281,"results":"33","hashOfConfig":"26"},{"size":453,"mtime":1613410909230,"results":"34","hashOfConfig":"26"},{"size":395,"mtime":1613410909204,"results":"35","hashOfConfig":"26"},{"size":6344,"mtime":1613746319725,"results":"36","hashOfConfig":"26"},{"size":1040,"mtime":1613410909198,"results":"37","hashOfConfig":"26"},{"size":2854,"mtime":1613500526771,"results":"38","hashOfConfig":"26"},{"size":803,"mtime":1613410909179,"results":"39","hashOfConfig":"26"},{"size":152,"mtime":1613415767786,"results":"40","hashOfConfig":"26"},{"size":2001,"mtime":1613665201731,"results":"41","hashOfConfig":"26"},{"size":316,"mtime":1613664958941,"results":"42","hashOfConfig":"26"},{"size":1375,"mtime":1613778755502,"results":"43","hashOfConfig":"26"},{"size":657,"mtime":1613772963637,"results":"44","hashOfConfig":"26"},{"size":0,"mtime":1613410909219,"results":"45","hashOfConfig":"26"},{"size":276,"mtime":1613776578936,"results":"46","hashOfConfig":"26"},{"size":738,"mtime":1613777243157,"results":"47","hashOfConfig":"26"},{"size":747,"mtime":1613777485907,"results":"48","hashOfConfig":"26"},{"size":1699,"mtime":1613779205299,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1kt3c47",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js",[],["109","110"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js",["111","112","113"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js",["114","115"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport global from './Global';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, global);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx",["116","117"],"import React, {useState, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {\n  setUserSpare1byEmail,\n  sendMail,\n  generateUserSpare1ByEmail,\n} from '../API/API';\nimport ReCaptcha from '@matt-block/react-recaptcha-v2';\nimport {SITE_KEY} from '../data/Consts';\n\nexport default function ForgotPage () {\n  const [email, setEmail] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n  const [isVerified, setIsVerified] = useState (false);\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n\n    generateUserSpare1ByEmail (email).then (res => {\n      if (res.data) {\n        const userId = res.data.id;\n        const newToken = res.data.spare1;\n\n        const full =\n          window.location.protocol +\n          '//' +\n          window.location.hostname +\n          (window.location.port ? ':' + window.location.port : '');\n        const url = `${full}/ch/${userId}/${newToken}`;\n\n        const to = email;\n        const subject = 'Recovery Email';\n        const text = `Click on this link to reset your password: ${url}`;\n        const onSuccess = e => {};\n        sendMail (to, subject, text, onSuccess);\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n        alertRef.current.showAlert ();\n      } else {\n        console.log (\"email is not valid, don't tell the user...\");\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n      }\n    });\n  };\n  function validateForm () {\n    return email.length > 0 && isVerified;\n  }\n\n  const alertRef = useRef ();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Player\n          src=\"https://assets4.lottiefiles.com/packages/lf20_IQ2Fuq.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          loop\n          autoplay\n          style={{height: '300px', width: '300px'}}\n        />\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        <div className=\" d-flex flex-column align-items-md-center\">\n          <h3 className=\"mt-5 mb-5\">Reset Password</h3>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => setEmail (e.target.value)}\n            />\n          </div>\n          <ReCaptcha\n            siteKey={SITE_KEY}\n            theme=\"light\"\n            size=\"normal\"\n            onSuccess={captcha => setIsVerified (true)}\n            onExpire={() =>\n              console.log ('Verification has expired, re-verify.')}\n            onError={() =>\n              console.log ('Something went wrong, check your conenction')}\n          />\n          <button\n            disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n          >\n            Send reset email\n          </button>\n\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"/sign-in\">sign in?</a>\n          </p>\n        </div>\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx",["118","119","120","121","122","123","124"],"import React, {useState, useRef, useEffect} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {doesEmailExists, register, sendMail} from '../API/API';\nimport ReCaptcha from '@matt-block/react-recaptcha-v2';\nimport {SITE_KEY, SECRET_KEY} from '../data/Consts';\nimport SmartPasswordInput from '../components/SmartPasswordInput';\nimport * as Yup from 'yup';\nimport {useFormik} from 'formik';\nimport {useHistory} from 'react-router-dom';\n\nvar sha256 = require ('js-sha256');\n\nexport default function SignUpPage () {\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n  const [isVerified, setIsVerified] = useState (false);\n  const history = useHistory ();\n  const onSignUpClick = () => {\n    history.push ('/sign-up');\n  };\n\n  const handleSubmit = ({fname, lname, email, password, promoCode}) => {\n    // check if already exists\n    doesEmailExists (email).then (res => {\n      if (res.data.length != 0) {\n        // user already exists\n        setAlertType ('warning');\n        setAlertHeading ('User Exists');\n        setAlertBody (\n          'There is already an account registered with this email!'\n        );\n        alertRef.current.showAlert ();\n      } else {\n        // register\n\n        register (\n          fname,\n          lname,\n          email,\n          sha256 (password),\n          promoCode\n        ).then (res => {\n          setAlertType ('success');\n          setAlertHeading ('Success');\n          setAlertBody ('Registeration has been completed successfully!');\n          alertRef.current.showAlert ();\n\n          // send activation mail\n\n          const userId = res.data.id;\n          const token = res.data.spare2;\n\n          const full =\n            window.location.protocol +\n            '//' +\n            window.location.hostname +\n            (window.location.port ? ':' + window.location.port : '');\n          const url = `${full}/a/${userId}/${token}`;\n\n          const to = email;\n          const subject = 'Activation Email';\n          const text = `Click on this link to activate your account: ${url}`;\n          const onSuccess = e => {};\n          sendMail (to, subject, text, onSuccess);\n          setAlertType ('success');\n          setAlertHeading ('Success');\n          setAlertBody ('Check your email for an activation link');\n        });\n      }\n    });\n  };\n\n  const onLogInClick = () => {\n    history.push ('/sign-in');\n  };\n  const alertRef = useRef ();\n\n  const formik = useFormik ({\n    initialValues: {\n      fname: '',\n      lname: '',\n      email: '',\n      password: '',\n      pass2: '',\n      promoCode: '',\n    },\n    validationSchema: Yup.object ({\n      fname: Yup.string ()\n        .max (15, 'Must be 15 characters or less')\n        .required ('Required'),\n      lname: Yup.string ()\n        .max (20, 'Must be 15 characters or less')\n        .required ('Required'),\n      email: Yup.string ()\n        .email ('Invalid email address')\n        .required ('Required'),\n\n      password: Yup.string ()\n        .required ('Password is required')\n        .matches (\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n          'Must Contain at least 8 Characters\\n One Uppercase, One Lowercase\\n One Number and one special\\n case Character'\n        ),\n\n      pass2: Yup.string ()\n        .oneOf ([Yup.ref ('password'), null], 'Passwords must match')\n        .required ('Required'),\n\n      promoCode: Yup.string (),\n    }),\n    onSubmit: values => {\n      handleSubmit (values);\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Player\n        src=\"https://assets5.lottiefiles.com/packages/lf20_wd1udlcz.json\"\n        background=\"transparent\"\n        speed=\"1\"\n        loop\n        autoplay\n        style={{height: '300px', width: '300px'}}\n      />\n      <TemporaryAlert\n        body={alertBody}\n        heading={alertHeading}\n        type={alertType}\n        ref={alertRef}\n      />\n      <div className=\" d-flex flex-column align-items-md-center\">\n      <h2 className=\"m-5\">Sign Up</h2>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control m-2\"\n            id=\"fname\"\n            name=\"fname\"\n            type=\"text\"\n            placeholder=\"First Name\"\n            {...formik.getFieldProps ('fname')}\n          />\n          {formik.touched.fname && formik.errors.fname\n            ? <div className=\"error ml-2\">{formik.errors.fname}</div>\n            : null}\n        </div>\n\n        <div className=\"form-group\">\n\n          <input\n            className=\"form-control m-2\"\n            id=\"lname\"\n            name=\"lname\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            {...formik.getFieldProps ('lname')}\n          />\n          {formik.touched.lname && formik.errors.lname\n            ? <div className=\"error ml-2\">{formik.errors.lname}</div>\n            : null}\n        </div>\n\n        <div className=\"form-group\">\n\n          <input\n            className=\"form-control m-2\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            {...formik.getFieldProps ('email')}\n          />\n          {formik.touched.email && formik.errors.email\n            ? <div className=\"error ml-2\">{formik.errors.email}</div>\n            : null}\n        </div>\n\n        <div className=\"form-group\">\n\n          <input\n            className=\"form-control m-2\"\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            {...formik.getFieldProps ('password')}\n          />\n        \n        </div>\n        <div className=\"shrink\">\n        {formik.touched.password && formik.errors.password\n            ? <p className=\"error ml-2\">{formik.errors.password}</p>\n            : null}\n        </div>\n        \n        <div className=\"form-group\">\n\n          <input\n            className=\"form-control m-2\"\n            id=\"pass2\"\n            name=\"pass2\"\n            type=\"password\"\n            placeholder=\"Repeat Password\"\n            {...formik.getFieldProps ('pass2')}\n          />\n          {formik.touched.pass2 && formik.errors.pass2\n            ? <div className=\"error ml-2\">{formik.errors.pass2}</div>\n            : null}\n        </div>\n\n        <div className=\"form-group\">\n\n          <input\n            className=\"form-control m-2\"\n            id=\"promoCode\"\n            name=\"promoCode\"\n            type=\"text\"\n            placeholder=\"Promo Code\"\n            {...formik.getFieldProps ('promoCode')}\n          />\n          {formik.touched.promoCode && formik.errors.promoCode\n            ? <div className=\"error ml-2\">{formik.errors.promoCode}</div>\n            : null}\n        </div>\n        <ReCaptcha\n          siteKey={SITE_KEY}\n          theme=\"light\"\n          size=\"normal\"\n          onSuccess={captcha => setIsVerified (true)}\n          onExpire={() => console.log ('Verification has expired, re-verify.')}\n          onError={() =>\n            console.log ('Something went wrong, check your conenction')}\n        />\n        <div className=\"form-group\">\n\n          <button\n            //disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n            disabled={!(formik.isValid && formik.dirty && isVerified)}\n          >\n            Sign Up\n          </button>\n\n          <div className=\"form-group mt-3\">\n            Already have an account? \n          <a className=\"mb-3 pointer\" size=\"m\" onClick={onLogInClick}>\n            {' '}Sign In\n          </a>\n        </div>\n        </div>\n\n      </div>\n    </form>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx",["125","126","127","128"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx",["129","130","131","132","133"],"import React, {useEffect} from 'react';\nimport {sendMail} from '../API/API';\nexport default function TestPage () {\n  \nuseEffect (() => {\n    const to = 'bshara23@gmail.com';\n    const subject = 'This is a test email';\n    const text = 'this is the content';\n    const onSuccess = e => {\n      console.log ('on success', e);\n    };\n    //sendMail (to, subject, text, onSuccess);\n  }, []);\n\n  return (\n    <div>\n      <h1>Test Page</h1>\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx",["134"],"import React from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\n\nexport default function E404Page () {\n  return (\n    <div>\n      <Player\n        src=\"https://assets7.lottiefiles.com/temp/lf20_USCruP.json\"\n        background=\"transparent\"\n        speed=\"1\"\n        loop\n        autoplay\n        style={{height: '500px', width: '500px'}}\n      />\n\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx",["135","136","137"],"import React, {useEffect, useState, useRef} from 'react';\nimport {getUserSpare1, updatePasswordByToken, setUserSpare1} from '../API/API';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {useHistory} from 'react-router-dom';\nimport ReCaptcha from '@matt-block/react-recaptcha-v2';\nimport {SITE_KEY, SECRET_KEY} from '../data/Consts';\nimport * as Yup from 'yup';\nimport {useFormik} from 'formik';\nvar sha256 = require ('js-sha256');\n\nexport default function ChangePassword({match}) {\n  const alertRef = useRef ();\n  const history = useHistory ();\n\n  const [allow, setAllow] = useState (false);\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n  const [isVerified, setIsVerified] = useState (false);\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log (match);\n    getUserSpare1 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare1;\n        if (token === userToken) {\n          // token is valid\n          setAllow (true);\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  const handleSubmit = ({password}) => {\n\n    let userId = match.params.id;\n    let userToken = match.params.token;\n\n    updatePasswordByToken (userId, userToken, sha256 (password)).then (res => {\n      if (res.data == 1) {\n        // password changed\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Password has been changed successfuly!');\n        alertRef.current.showAlert ();\n        setAllow (false);\n        // delete token\n        setUserSpare1 (userId, null).then (res => {\n          setTimeout (() => {\n            // redirect to log in\n            history.push ('/sign-in');\n          }, 1000);\n        });\n      } else {\n        // password didn't change\n        setAlertType ('warning');\n        setAlertHeading ('Error');\n        setAlertBody ('Ops, something went wrong!!');\n        alertRef.current.showAlert ();\n      }\n    });\n  };\n\n  const formik = useFormik ({\n    initialValues: {\n      password: '',\n      pass2: '',\n    },\n    validationSchema: Yup.object ({\n      password: Yup.string ()\n        .required ('Password is required')\n        .matches (\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n          'Must Contain at least 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\n        ),\n\n      pass2: Yup.string ()\n        .oneOf ([Yup.ref ('password'), null], 'Passwords must match')\n        .required ('Required'),\n    }),\n    onSubmit: values => {\n      handleSubmit (values);\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n\n      <TemporaryAlert\n        body={alertBody}\n        heading={alertHeading}\n        type={alertType}\n        ref={alertRef}\n      />\n      {allow &&\n        <div className=\" d-flex flex-column align-items-md-center\">\n      <h2 className=\"m-5\">Change Password</h2>\n\n          <div className=\"form-group\">\n\n            <input\n              className=\"form-control m-2\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              {...formik.getFieldProps ('password')}\n            />\n            {formik.touched.password && formik.errors.password\n              ? <div className=\"error ml-2\">{formik.errors.password}</div>\n              : null}\n          </div>\n\n          <div className=\"form-group\">\n\n            <input\n              className=\"form-control m-2\"\n              id=\"pass2\"\n              name=\"pass2\"\n              type=\"password\"\n              placeholder=\"Repeat Password\"\n              {...formik.getFieldProps ('pass2')}\n            />\n            {formik.touched.pass2 && formik.errors.pass2\n              ? <div className=\"error ml-2\">{formik.errors.pass2}</div>\n              : null}\n          </div>\n\n          <ReCaptcha\n            siteKey={SITE_KEY}\n            theme=\"light\"\n            size=\"normal\"\n            onSuccess={captcha => setIsVerified (true)}\n            onExpire={() =>\n              console.log ('Verification has expired, re-verify.')}\n            onError={() =>\n              console.log ('Something went wrong, check your conenction')}\n          />\n          <div className=\"form-group\">\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary mt-3\"\n              disabled={!(formik.isValid && formik.dirty && isVerified)}\n            >\n              Change Password\n            </button>\n          </div>\n\n        </div>}\n\n    </form>\n  );\n}\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n\n//         <TemporaryAlert\n//           body={alertBody}\n//           heading={alertHeading}\n//           type={alertType}\n//           ref={alertRef}\n//         />\n\n//         {allow &&\n//           <div>\n\n//             <div className=\" d-flex flex-column align-items-md-center\">\n//               <h3 className=\"mt-5 mb-5\">Change Password</h3>\n\n//               <div className=\"form-group\">\n//                 <SmartPasswordInput\n//                   onValChange={e => setPassword (e)}\n//                   onErrorChange={err => setPasswordError (err)}\n//                   onValChangeConfirm={e => setRepeatedPassword (e)}\n//                   onErrorChangeConfirm={err => setPasswordConfirmError (err)}\n//                 />\n//               </div>\n\n//               <ReCaptcha\n//                 siteKey={SITE_KEY}\n//                 theme=\"light\"\n//                 size=\"normal\"\n//                 onSuccess={captcha => setIsVerified (true)}\n//                 onExpire={() =>\n//                   console.log ('Verification has expired, re-verify.')}\n//                 onError={() =>\n//                   console.log ('Something went wrong, check your conenction')}\n//               />\n//               <button\n//                 disabled={!validateForm ()}\n//                 type=\"submit\"\n//                 className=\"btn btn-primary mt-3\"\n//               >\n//                 Change Password\n//               </button>\n//             </div>\n\n//           </div>}\n\n//       </form>       {' '}\n//     </div>\n//   );\n// }\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx",["138","139"],"import React, {useEffect, useState} from 'react';\nimport {getUserSpare2, setUserSpare2} from '../API/API';\nimport {useHistory} from 'react-router-dom';\nvar sha256 = require ('js-sha256');\n\nexport default function ActivateAccount({match}) {\n  const history = useHistory ();\n  const [allow, setAllow] = useState (false);\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log(userId, userToken);\n\n    getUserSpare2 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare2;\n        console.log(token, userToken);\n        if (token === userToken) {\n          setUserSpare2 (userId, 'Activated').then (res => {\n            setAllow (true);\n            setTimeout (() => {\n              history.push ('/sign-in');\n            }, 2000);\n          });\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      {allow && <h3>Account activated, redirecting...</h3>}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js",["140"],"const axios = require ('axios');\nconst nodemailer = require ('nodemailer');\n\nexport const API_URL = '';\nexport const logIn = async (email, password) => {\n  try {\n    return await axios\n      .get (API_URL + `/users/${email}/${password}`)\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const doesEmailExists = async email => {\n  try {\n    return await axios.get (API_URL + `/users/${email}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const register = async (\n  fname,\n  lname,\n  email,\n  password,\n  promoCode = ''\n) => {\n  try {\n    return await axios\n      .post (API_URL + `/users`, {\n        name: fname,\n        family_name: lname,\n        email,\n        promo_code: promoCode,\n        password,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const sendMail = async (to, subject, text) => {\n  try {\n    return await axios\n      .post (API_URL + `/sendMail`, {\n        to,\n        subject,\n        text,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const getUserSpare1 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare1/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare1 = async (id, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1`, {id, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\nexport const getUserSpare2 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare2/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare2 = async (id, spare2) => {\n  try {\n    return await axios.put (API_URL + `/spare2`, {id, spare2}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\n\nexport const setUserSpare1byEmail = async (email, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const generateUserSpare1ByEmail = async (email) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const updatePasswordByToken = async (id, spare1, newPassword) => {\n  try {\n    return await axios\n      .put (API_URL + `/updatePasswordByToken`, {\n        id,\n        spare1,\n        newPassword,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx",["141"],"import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport {Alert} from 'react-bootstrap';\nvar timeout = null;\nconst TemporaryAlert = (\n  {body, heading, type = 'success', showTime = 5000},\n  ref\n) => {\n  const [show, setShow] = useState(false);\n \n  useImperativeHandle(ref, () => ({\n    showAlert: () => {\n      setShow(true);\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        closeAlert();\n      }, showTime);\n    },\n  }));\n\n  const closeAlert = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      {show && (\n        <Alert variant={type} onClose={closeAlert} dismissible>\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p>{body}</p>\n        </Alert>\n      )}\n    </>\n  );\n};\nexport default forwardRef(TemporaryAlert);\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/SmartPasswordInput.jsx",["142","143","144","145","146","147"],"import React, {useEffect} from 'react';\nimport {Formik, Form, useField} from 'formik';\nimport * as Yup from 'yup';\nimport {Form as Form2, Button} from 'react-bootstrap';\n\nexport default function SmartPasswordInput({\n  onValChange,\n  onErrorChange,\n  className,\n}) {\n  return (\n    <PasswordInput\n      className={className}\n      onValChange={onValChange}\n      onErrorChange={onErrorChange}\n    />\n  );\n}\n\nconst PasswordInput = ({onValChange, onErrorChange, className = ''}) => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={SignInSchema}>\n      {formik => {\n        const {errors, touched, isValid, dirty} = formik;\n\n        return (\n          <Form>\n            <CustomComponent2\n              label=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onValChange={onValChange}\n              onErrorChange={onErrorChange}\n              className={className + ' mb-3'}\n            />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst SignInSchema = Yup.object ().shape ({\n  password: Yup.string ()\n    .required ('Password is required')\n    .matches (\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      'Must Contain at least 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\n    ),\n  passwordConfirmation: Yup.string ().oneOf (\n    [Yup.ref ('password'), null],\n    'Passwords must match'\n  ),\n});\n\nconst CustomComponent2 = props => {\n  const [field, meta] = useField (props);\n  useEffect (\n    () => {\n      if (meta !== undefined) {\n        if (props.onValChange !== undefined) {\n          props.onValChange (meta.value);\n        }\n      }\n    },\n    [meta]\n  );\n\n  return (\n    <div>\n\n      <Form2.Control {...field} {...props} />\n\n      {meta.touched && meta.error\n        ? <div className=\"error\">{meta.error}</div>\n        : null}\n    </div>\n  );\n};\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/DoubleSmartPasswordInput.jsx",["148","149","150","151","152","153","154","155"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/Navbar.jsx",["156","157","158","159"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/BasicCard.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ProfilePage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/Testor.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PCsPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PhonesPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/About.jsx",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":4,"column":22,"nodeType":"167","messageId":"168","endLine":4,"endColumn":32},{"ruleId":"165","severity":1,"message":"169","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":28,"column":6,"nodeType":"172","endLine":28,"endColumn":8,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":3,"column":3,"nodeType":"167","messageId":"168","endLine":3,"endColumn":15},{"ruleId":"165","severity":1,"message":"175","line":13,"column":9,"nodeType":"167","messageId":"168","endLine":13,"endColumn":20},{"ruleId":"165","severity":1,"message":"176","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"177","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":23},{"ruleId":"165","severity":1,"message":"178","line":1,"column":34,"nodeType":"167","messageId":"168","endLine":1,"endColumn":43},{"ruleId":"165","severity":1,"message":"176","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"179","line":6,"column":19,"nodeType":"167","messageId":"168","endLine":6,"endColumn":29},{"ruleId":"165","severity":1,"message":"180","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":26},{"ruleId":"165","severity":1,"message":"181","line":20,"column":9,"nodeType":"167","messageId":"168","endLine":20,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":27,"column":27,"nodeType":"184","messageId":"185","endLine":27,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":249,"column":11,"nodeType":"188","endLine":249,"endColumn":71},{"ruleId":"182","severity":1,"message":"183","line":43,"column":29,"nodeType":"184","messageId":"185","endLine":43,"endColumn":31},{"ruleId":"170","severity":1,"message":"189","line":53,"column":6,"nodeType":"172","endLine":53,"endColumn":8,"suggestions":"190"},{"ruleId":"182","severity":1,"message":"183","line":57,"column":27,"nodeType":"184","messageId":"185","endLine":57,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":205,"column":11,"nodeType":"188","endLine":205,"endColumn":72},{"ruleId":"165","severity":1,"message":"191","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"192","line":6,"column":11,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"193","line":7,"column":11,"nodeType":"167","messageId":"168","endLine":7,"endColumn":18},{"ruleId":"165","severity":1,"message":"194","line":8,"column":11,"nodeType":"167","messageId":"168","endLine":8,"endColumn":15},{"ruleId":"165","severity":1,"message":"195","line":9,"column":11,"nodeType":"167","messageId":"168","endLine":9,"endColumn":20},{"ruleId":"165","severity":1,"message":"176","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"179","line":6,"column":19,"nodeType":"167","messageId":"168","endLine":6,"endColumn":29},{"ruleId":"170","severity":1,"message":"196","line":38,"column":6,"nodeType":"172","endLine":38,"endColumn":8,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"198","line":46,"column":20,"nodeType":"184","messageId":"185","endLine":46,"endColumn":22},{"ruleId":"165","severity":1,"message":"199","line":4,"column":5,"nodeType":"167","messageId":"168","endLine":4,"endColumn":11},{"ruleId":"170","severity":1,"message":"200","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":8,"suggestions":"201"},{"ruleId":"165","severity":1,"message":"202","line":2,"column":7,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"178","line":2,"column":3,"nodeType":"167","messageId":"168","endLine":2,"endColumn":12},{"ruleId":"165","severity":1,"message":"203","line":4,"column":24,"nodeType":"167","messageId":"168","endLine":4,"endColumn":30},{"ruleId":"165","severity":1,"message":"204","line":29,"column":16,"nodeType":"167","messageId":"168","endLine":29,"endColumn":22},{"ruleId":"165","severity":1,"message":"205","line":29,"column":24,"nodeType":"167","messageId":"168","endLine":29,"endColumn":31},{"ruleId":"165","severity":1,"message":"206","line":29,"column":33,"nodeType":"167","messageId":"168","endLine":29,"endColumn":40},{"ruleId":"165","severity":1,"message":"207","line":29,"column":42,"nodeType":"167","messageId":"168","endLine":29,"endColumn":47},{"ruleId":"170","severity":1,"message":"208","line":72,"column":5,"nodeType":"172","endLine":72,"endColumn":11,"suggestions":"209"},{"ruleId":"165","severity":1,"message":"178","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"210","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},{"ruleId":"165","severity":1,"message":"211","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":15},{"ruleId":"165","severity":1,"message":"212","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":21},{"ruleId":"165","severity":1,"message":"213","line":2,"column":23,"nodeType":"167","messageId":"168","endLine":2,"endColumn":31},{"ruleId":"165","severity":1,"message":"214","line":3,"column":13,"nodeType":"167","messageId":"168","endLine":3,"endColumn":16},{"ruleId":"165","severity":1,"message":"215","line":4,"column":17,"nodeType":"167","messageId":"168","endLine":4,"endColumn":22},{"ruleId":"165","severity":1,"message":"203","line":4,"column":24,"nodeType":"167","messageId":"168","endLine":4,"endColumn":30},{"ruleId":"165","severity":1,"message":"216","line":3,"column":9,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"217","line":3,"column":15,"nodeType":"167","messageId":"168","endLine":3,"endColumn":25},{"ruleId":"165","severity":1,"message":"218","line":4,"column":9,"nodeType":"167","messageId":"168","endLine":4,"endColumn":16},{"ruleId":"165","severity":1,"message":"219","line":13,"column":9,"nodeType":"167","messageId":"168","endLine":13,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":51,"column":9,"nodeType":"188","endLine":51,"endColumn":42},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'useDispach' is defined but never used.","Identifier","unusedVar","'TestPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'persistStore' is defined but never used.","'PersistGate' is defined but never used.","'Controls' is defined but never used.","'setUserSpare1byEmail' is defined but never used.","'useEffect' is defined but never used.","'SECRET_KEY' is defined but never used.","'SmartPasswordInput' is defined but never used.","'onSignUpClick' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cookies.user', 'dispatch', and 'history'. Either include them or remove the dependency array.",["223"],"'sendMail' is defined but never used.","'to' is assigned a value but never used.","'subject' is assigned a value but never used.","'text' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'match'. Either include them or remove the dependency array.",["224"],"Expected '===' and instead saw '=='.","'sha256' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'match.params.token'. Either include them or remove the dependency array.",["225"],"'nodemailer' is assigned a value but never used.","'Button' is defined but never used.","'errors' is assigned a value but never used.","'touched' is assigned a value but never used.","'isValid' is assigned a value but never used.","'dirty' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["226"],"'useState' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'useField' is defined but never used.","'Yup' is defined but never used.","'Form2' is defined but never used.","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'connect' is defined but never used.","'onLogOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [user]",{"range":"237","text":"238"},"Update the dependencies array to be: [cookies.user, dispatch, history]",{"range":"239","text":"240"},"Update the dependencies array to be: [history, match]",{"range":"241","text":"242"},"Update the dependencies array to be: [history, match.params.id, match.params.token]",{"range":"243","text":"244"},"Update the dependencies array to be: [meta, props]",{"range":"245","text":"246"},[995,997],"[user]",[1818,1820],"[cookies.user, dispatch, history]",[1247,1249],"[history, match]",[935,937],"[history, match.params.id, match.params.token]",[1798,1804],"[meta, props]"]