[{"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js":"1","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js":"2","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js":"3","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js":"4","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx":"5","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx":"6","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx":"7","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx":"8","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx":"9","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx":"10","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx":"11","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx":"12","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js":"13","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx":"14","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js":"15","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/Navbar.jsx":"16","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/BasicCard.jsx":"17","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ProfilePage.jsx":"18","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/Testor.jsx":"19","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PCsPage.jsx":"20","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PhonesPage.jsx":"21","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/About.jsx":"22","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/CreditCard.jsx":"23"},{"size":776,"mtime":1613651001753,"results":"24","hashOfConfig":"25"},{"size":1991,"mtime":1613778730866,"results":"26","hashOfConfig":"25"},{"size":697,"mtime":1613410909184,"results":"27","hashOfConfig":"25"},{"size":648,"mtime":1613410909182,"results":"28","hashOfConfig":"25"},{"size":3429,"mtime":1613653717599,"results":"29","hashOfConfig":"25"},{"size":1594,"mtime":1613777942897,"results":"30","hashOfConfig":"25"},{"size":7655,"mtime":1613816607136,"results":"31","hashOfConfig":"25"},{"size":7070,"mtime":1613817108814,"results":"32","hashOfConfig":"25"},{"size":453,"mtime":1613410909230,"results":"33","hashOfConfig":"25"},{"size":395,"mtime":1613410909204,"results":"34","hashOfConfig":"25"},{"size":6344,"mtime":1613746319725,"results":"35","hashOfConfig":"25"},{"size":1040,"mtime":1613410909198,"results":"36","hashOfConfig":"25"},{"size":2854,"mtime":1613500526771,"results":"37","hashOfConfig":"25"},{"size":803,"mtime":1613410909179,"results":"38","hashOfConfig":"25"},{"size":152,"mtime":1613415767786,"results":"39","hashOfConfig":"25"},{"size":1739,"mtime":1613817075487,"results":"40","hashOfConfig":"25"},{"size":657,"mtime":1613772963637,"results":"41","hashOfConfig":"25"},{"size":0,"mtime":1613410909219,"results":"42","hashOfConfig":"25"},{"size":276,"mtime":1613776578936,"results":"43","hashOfConfig":"25"},{"size":1247,"mtime":1613816087997,"results":"44","hashOfConfig":"25"},{"size":747,"mtime":1613777485907,"results":"45","hashOfConfig":"25"},{"size":1699,"mtime":1613779205299,"results":"46","hashOfConfig":"25"},{"size":4326,"mtime":1613816539865,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1kt3c47",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/index.js",[],["108","109"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/App.js",["110","111","112"],"import React, {useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {useSelector, useDispach} from 'react-redux';\nimport LogInPage from './pages/LogInPage'\nimport SignUpPage from './pages/SignUpPage'\nimport DashboardPage from './pages/DashboardPage'\nimport PCsPage from './pages/PCsPage'\nimport PhonesPage from './pages/PhonesPage'\n\nimport TestPage from './pages/TestPage'\nimport ChangePassword from './pages/ChangePassword'\nimport E404Page from './pages/E404Page'\nimport ForgotPage from './pages/ForgotPage'\nimport ActivateAccount from './pages/ActivateAccount'\nimport About from './pages/About'\n\nimport Navbar from './components/Navbar'\nimport {currentUser} from './data/Global';\n\nfunction App() {\n  // const Login = useSelector(ShowLogIn);\n  // const isCoursesHidden = useSelector(ShowCourses);\n  const user = useSelector(currentUser);\n\n  useEffect(() => {\n    console.log(\"user\", user);\n  }, [])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"body\">\n          \n          \n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact component={LogInPage} />\n            <Route path=\"/ch/:id/:token\" exact component={ChangePassword} />\n            <Route path=\"/a/:id/:token\" exact component={ActivateAccount} />\n\n            <Route path=\"/404\" exact component={E404Page} />\n\n            <Route path=\"/sign-up\" exact component={SignUpPage} />\n            <Route path=\"/sign-in\" exact component={LogInPage} />\n            <Route path=\"/reset-password\" exact component={ForgotPage} />\n\n\n            <Route path=\"/dashboard\" exact component={DashboardPage}/>\n            <Route path=\"/pcs\" exact component={PCsPage} />\n            <Route path=\"/phones\" exact component={PhonesPage} />\n            <Route path=\"/about\" exact component={About} />\n\n            \n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/store.js",["113","114"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport global from './Global';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, global);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Global.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ForgotPage.jsx",["115","116"],"import React, {useState, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {\n  setUserSpare1byEmail,\n  sendMail,\n  generateUserSpare1ByEmail,\n} from '../API/API';\nimport ReCaptcha from '@matt-block/react-recaptcha-v2';\nimport {SITE_KEY} from '../data/Consts';\n\nexport default function ForgotPage () {\n  const [email, setEmail] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n  const [isVerified, setIsVerified] = useState (false);\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n\n    generateUserSpare1ByEmail (email).then (res => {\n      if (res.data) {\n        const userId = res.data.id;\n        const newToken = res.data.spare1;\n\n        const full =\n          window.location.protocol +\n          '//' +\n          window.location.hostname +\n          (window.location.port ? ':' + window.location.port : '');\n        const url = `${full}/ch/${userId}/${newToken}`;\n\n        const to = email;\n        const subject = 'Recovery Email';\n        const text = `Click on this link to reset your password: ${url}`;\n        const onSuccess = e => {};\n        sendMail (to, subject, text, onSuccess);\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n        alertRef.current.showAlert ();\n      } else {\n        console.log (\"email is not valid, don't tell the user...\");\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Check your email for a reset link');\n      }\n    });\n  };\n  function validateForm () {\n    return email.length > 0 && isVerified;\n  }\n\n  const alertRef = useRef ();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Player\n          src=\"https://assets4.lottiefiles.com/packages/lf20_IQ2Fuq.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          loop\n          autoplay\n          style={{height: '300px', width: '300px'}}\n        />\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        <div className=\" d-flex flex-column align-items-md-center\">\n          <h3 className=\"mt-5 mb-5\">Reset Password</h3>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => setEmail (e.target.value)}\n            />\n          </div>\n          <ReCaptcha\n            siteKey={SITE_KEY}\n            theme=\"light\"\n            size=\"normal\"\n            onSuccess={captcha => setIsVerified (true)}\n            onExpire={() =>\n              console.log ('Verification has expired, re-verify.')}\n            onError={() =>\n              console.log ('Something went wrong, check your conenction')}\n          />\n          <button\n            disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n          >\n            Send reset email\n          </button>\n\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"/sign-in\">sign in?</a>\n          </p>\n        </div>\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/DashboardPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/SignUpPage.jsx",["117","118","119","120"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/LogInPage.jsx",["121","122","123","124"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/TestPage.jsx",["125","126","127","128","129"],"import React, {useEffect} from 'react';\nimport {sendMail} from '../API/API';\nexport default function TestPage () {\n  \nuseEffect (() => {\n    const to = 'bshara23@gmail.com';\n    const subject = 'This is a test email';\n    const text = 'this is the content';\n    const onSuccess = e => {\n      console.log ('on success', e);\n    };\n    //sendMail (to, subject, text, onSuccess);\n  }, []);\n\n  return (\n    <div>\n      <h1>Test Page</h1>\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/E404Page.jsx",["130"],"import React from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\n\nexport default function E404Page () {\n  return (\n    <div>\n      <Player\n        src=\"https://assets7.lottiefiles.com/temp/lf20_USCruP.json\"\n        background=\"transparent\"\n        speed=\"1\"\n        loop\n        autoplay\n        style={{height: '500px', width: '500px'}}\n      />\n\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ChangePassword.jsx",["131","132","133"],"import React, {useEffect, useState, useRef} from 'react';\nimport {getUserSpare1, updatePasswordByToken, setUserSpare1} from '../API/API';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {useHistory} from 'react-router-dom';\nimport ReCaptcha from '@matt-block/react-recaptcha-v2';\nimport {SITE_KEY, SECRET_KEY} from '../data/Consts';\nimport * as Yup from 'yup';\nimport {useFormik} from 'formik';\nvar sha256 = require ('js-sha256');\n\nexport default function ChangePassword({match}) {\n  const alertRef = useRef ();\n  const history = useHistory ();\n\n  const [allow, setAllow] = useState (false);\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n  const [isVerified, setIsVerified] = useState (false);\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log (match);\n    getUserSpare1 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare1;\n        if (token === userToken) {\n          // token is valid\n          setAllow (true);\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  const handleSubmit = ({password}) => {\n\n    let userId = match.params.id;\n    let userToken = match.params.token;\n\n    updatePasswordByToken (userId, userToken, sha256 (password)).then (res => {\n      if (res.data == 1) {\n        // password changed\n        setAlertType ('success');\n        setAlertHeading ('Success');\n        setAlertBody ('Password has been changed successfuly!');\n        alertRef.current.showAlert ();\n        setAllow (false);\n        // delete token\n        setUserSpare1 (userId, null).then (res => {\n          setTimeout (() => {\n            // redirect to log in\n            history.push ('/sign-in');\n          }, 1000);\n        });\n      } else {\n        // password didn't change\n        setAlertType ('warning');\n        setAlertHeading ('Error');\n        setAlertBody ('Ops, something went wrong!!');\n        alertRef.current.showAlert ();\n      }\n    });\n  };\n\n  const formik = useFormik ({\n    initialValues: {\n      password: '',\n      pass2: '',\n    },\n    validationSchema: Yup.object ({\n      password: Yup.string ()\n        .required ('Password is required')\n        .matches (\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n          'Must Contain at least 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\n        ),\n\n      pass2: Yup.string ()\n        .oneOf ([Yup.ref ('password'), null], 'Passwords must match')\n        .required ('Required'),\n    }),\n    onSubmit: values => {\n      handleSubmit (values);\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n\n      <TemporaryAlert\n        body={alertBody}\n        heading={alertHeading}\n        type={alertType}\n        ref={alertRef}\n      />\n      {allow &&\n        <div className=\" d-flex flex-column align-items-md-center\">\n      <h2 className=\"m-5\">Change Password</h2>\n\n          <div className=\"form-group\">\n\n            <input\n              className=\"form-control m-2\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              {...formik.getFieldProps ('password')}\n            />\n            {formik.touched.password && formik.errors.password\n              ? <div className=\"error ml-2\">{formik.errors.password}</div>\n              : null}\n          </div>\n\n          <div className=\"form-group\">\n\n            <input\n              className=\"form-control m-2\"\n              id=\"pass2\"\n              name=\"pass2\"\n              type=\"password\"\n              placeholder=\"Repeat Password\"\n              {...formik.getFieldProps ('pass2')}\n            />\n            {formik.touched.pass2 && formik.errors.pass2\n              ? <div className=\"error ml-2\">{formik.errors.pass2}</div>\n              : null}\n          </div>\n\n          <ReCaptcha\n            siteKey={SITE_KEY}\n            theme=\"light\"\n            size=\"normal\"\n            onSuccess={captcha => setIsVerified (true)}\n            onExpire={() =>\n              console.log ('Verification has expired, re-verify.')}\n            onError={() =>\n              console.log ('Something went wrong, check your conenction')}\n          />\n          <div className=\"form-group\">\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary mt-3\"\n              disabled={!(formik.isValid && formik.dirty && isVerified)}\n            >\n              Change Password\n            </button>\n          </div>\n\n        </div>}\n\n    </form>\n  );\n}\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n\n//         <TemporaryAlert\n//           body={alertBody}\n//           heading={alertHeading}\n//           type={alertType}\n//           ref={alertRef}\n//         />\n\n//         {allow &&\n//           <div>\n\n//             <div className=\" d-flex flex-column align-items-md-center\">\n//               <h3 className=\"mt-5 mb-5\">Change Password</h3>\n\n//               <div className=\"form-group\">\n//                 <SmartPasswordInput\n//                   onValChange={e => setPassword (e)}\n//                   onErrorChange={err => setPasswordError (err)}\n//                   onValChangeConfirm={e => setRepeatedPassword (e)}\n//                   onErrorChangeConfirm={err => setPasswordConfirmError (err)}\n//                 />\n//               </div>\n\n//               <ReCaptcha\n//                 siteKey={SITE_KEY}\n//                 theme=\"light\"\n//                 size=\"normal\"\n//                 onSuccess={captcha => setIsVerified (true)}\n//                 onExpire={() =>\n//                   console.log ('Verification has expired, re-verify.')}\n//                 onError={() =>\n//                   console.log ('Something went wrong, check your conenction')}\n//               />\n//               <button\n//                 disabled={!validateForm ()}\n//                 type=\"submit\"\n//                 className=\"btn btn-primary mt-3\"\n//               >\n//                 Change Password\n//               </button>\n//             </div>\n\n//           </div>}\n\n//       </form>       {' '}\n//     </div>\n//   );\n// }\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ActivateAccount.jsx",["134","135"],"import React, {useEffect, useState} from 'react';\nimport {getUserSpare2, setUserSpare2} from '../API/API';\nimport {useHistory} from 'react-router-dom';\nvar sha256 = require ('js-sha256');\n\nexport default function ActivateAccount({match}) {\n  const history = useHistory ();\n  const [allow, setAllow] = useState (false);\n\n  useEffect (() => {\n    let userId = match.params.id;\n    let userToken = match.params.token;\n    console.log(userId, userToken);\n\n    getUserSpare2 (userId).then (res => {\n      if (res.data) {\n        let token = res.data.spare2;\n        console.log(token, userToken);\n        if (token === userToken) {\n          setUserSpare2 (userId, 'Activated').then (res => {\n            setAllow (true);\n            setTimeout (() => {\n              history.push ('/sign-in');\n            }, 2000);\n          });\n        } else {\n          setAllow (false);\n          history.push ('/404');\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      {allow && <h3>Account activated, redirecting...</h3>}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/API/API.js",["136"],"const axios = require ('axios');\nconst nodemailer = require ('nodemailer');\n\nexport const API_URL = '';\nexport const logIn = async (email, password) => {\n  try {\n    return await axios\n      .get (API_URL + `/users/${email}/${password}`)\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const doesEmailExists = async email => {\n  try {\n    return await axios.get (API_URL + `/users/${email}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const register = async (\n  fname,\n  lname,\n  email,\n  password,\n  promoCode = ''\n) => {\n  try {\n    return await axios\n      .post (API_URL + `/users`, {\n        name: fname,\n        family_name: lname,\n        email,\n        promo_code: promoCode,\n        password,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const sendMail = async (to, subject, text) => {\n  try {\n    return await axios\n      .post (API_URL + `/sendMail`, {\n        to,\n        subject,\n        text,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\nexport const getUserSpare1 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare1/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare1 = async (id, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1`, {id, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\nexport const getUserSpare2 = async id => {\n  try {\n    return await axios.get (API_URL + `/spare2/${id}`).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const setUserSpare2 = async (id, spare2) => {\n  try {\n    return await axios.put (API_URL + `/spare2`, {id, spare2}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\n\n\n\nexport const setUserSpare1byEmail = async (email, spare1) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email, spare1}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const generateUserSpare1ByEmail = async (email) => {\n  try {\n    return await axios.put (API_URL + `/spare1email`, {email}).then (res => {\n      return res;\n    });\n  } catch (error) {\n    console.error (error);\n  }\n};\nexport const updatePasswordByToken = async (id, spare1, newPassword) => {\n  try {\n    return await axios\n      .put (API_URL + `/updatePasswordByToken`, {\n        id,\n        spare1,\n        newPassword,\n      })\n      .then (res => {\n        return res;\n      });\n  } catch (error) {\n    console.error (error);\n  }\n};\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/TemporaryAlert.jsx",["137"],"import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport {Alert} from 'react-bootstrap';\nvar timeout = null;\nconst TemporaryAlert = (\n  {body, heading, type = 'success', showTime = 5000},\n  ref\n) => {\n  const [show, setShow] = useState(false);\n \n  useImperativeHandle(ref, () => ({\n    showAlert: () => {\n      setShow(true);\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        closeAlert();\n      }, showTime);\n    },\n  }));\n\n  const closeAlert = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      {show && (\n        <Alert variant={type} onClose={closeAlert} dismissible>\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p>{body}</p>\n        </Alert>\n      )}\n    </>\n  );\n};\nexport default forwardRef(TemporaryAlert);\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/data/Consts.js",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/Navbar.jsx",["138","139","140","141","142"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/BasicCard.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/ProfilePage.jsx",[],["143","144"],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/Testor.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PCsPage.jsx",["145"],"import React, {useState} from 'react';\nimport pcs from '../data/pcs.json';\nimport BasicCard from '../components/BasicCard';\nimport CreditCard from '../components/CreditCard';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nexport default function PCsPage () {\n  const [show, setShow] = useState (false);\n  const handleClose = () => setShow (false);\n  const handleShow = () => setShow (true);\n\n  return (\n    <div>\n\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Credit Card Payment</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <CreditCard onSuccess={handleClose} />\n        </Modal.Body>\n\n      </Modal>\n\n      <h1 className=\"text-center m-5\">PCs</h1>\n      <div className=\"d-flex align-content-sm-center flex-wrap\">\n\n        {pcs.devs.map ((x, i) => {\n          return (\n            <div key={i} className=\"m-3\">\n              <BasicCard\n                title={x.id}\n                description={x.description}\n                onBuyClick={handleShow}\n                imgSrc={require ('../data/images/' + x.src).default}\n              />\n            </div>\n          );\n        })}\n\n      </div>\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/PhonesPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/pages/About.jsx",["146"],"import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {useHistory} from 'react-router-dom';\nimport privacyPdf from '../data/privacy.pdf';\nimport termsPdf from '../data/terms.pdf';\n\nexport default function About () {\n  const history = useHistory ();\n\n  const onTermsClick = () => {};\n\n  const onPrivacyClick = () => {};\n  const onBackToDashboardClick = () => {\n    history.push ('/dashboard');\n  };\n  return (\n    <div>\n\n      <h1 className=\"text-center m-5\">About</h1>\n      <h3 className=\"text-center m-5\">Got any questions? contact us!</h3>\n\n      <div className=\"d-flex flex-column justify-content-md-around align-content-md-center\">\n\n        <div className=\"m-3 align-self-center\">Phone: 052-2865645</div>\n        <div className=\"m-3 align-self-center\">Email: hasouby@hotmail.com</div>\n\n        <a\n          className=\"m-3 align-self-center\"\n          href={privacyPdf}\n          without\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <Button className=\"\" variant=\"primary\" onClick={onTermsClick}>\n            Terms & Conditions\n          </Button>\n        </a>\n\n        <a\n          className=\"m-3 align-self-center\"\n          href={termsPdf}\n          without\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <Button className=\"\" variant=\"primary\" onClick={onPrivacyClick}>\n            Privacy\n          </Button>\n        </a>\n\n        <a className=\"align-self-center\">\n          <Button\n            className=\"m-3\"\n            variant=\"primary\"\n            onClick={onBackToDashboardClick}\n          >\n            Back to dashboard\n          </Button>\n\n        </a>\n\n      </div>\n\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-backend/csfrontend/src/components/CreditCard.jsx",["147"],"import React, {useState} from 'react';\nimport Cards from 'react-credit-cards';\nimport * as Yup from 'yup';\nimport {useFormik} from 'formik';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'react-credit-cards/es/styles-compiled.css';\n\nexport default function CreditCard ({onSuccess}) {\n  const [focus, setFocus] = useState ('');\n\n  const [buttonTitle, setButtonTitle] = useState ('Confirm Payment');\n  const onPaymentPress = () => {\n    \n    if (buttonTitle === \"Success\") {\n        onSuccess()\n    }else{\n        setButtonTitle ('Proccessing');\n\n        setTimeout (() => {\n          setButtonTitle ('Success');\n        }, 2000);\n    }\n    \n    \n  };\n  const handleInputFocus = e => {\n    setFocus (e.target.name);\n  };\n\n  const formik = useFormik ({\n    initialValues: {\n      cvc: '',\n      expiry: '',\n      name: '',\n      number: '4',\n    },\n    validationSchema: Yup.object ({\n      cvc: Yup.string ()\n        .max (3, 'Must be exactly 3')\n        .min (3, 'Must be exactly 3')\n        .required ('Required'),\n      expiry: Yup.string ()\n        .max (4, 'Must be exactly 4')\n        .min (4, 'Must be exactly 4')\n        .required ('Required'),\n      name: Yup.string ().required ('Required'),\n\n      number: Yup.string ()\n        .required ('Numbers required')\n        .min (16, 'Must be exactly 16')\n        .max (16, 'Must be exactly 16'),\n    }),\n    onSubmit: values => {\n      onPaymentPress ();\n    },\n  });\n  return (\n    <form\n      className=\"d-flex flex-row justify-content-center\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Cards\n        cvc={formik.values.cvc}\n        expiry={formik.values.expiry}\n        focused={focus}\n        name={formik.values.name}\n        number={formik.values.number}\n        \n      />\n      <div className=\" d-flex flex-column align-items-md-center ml-5\">\n\n        <div className=\"form-group w-100\">\n          <input\n            className=\"form-control m-2\"\n            id=\"number\"\n            name=\"number\"\n            type=\"number\"\n            placeholder=\"Number\"\n            {...formik.getFieldProps ('number')}\n            onFocus={handleInputFocus}\n          />\n          {formik.touched.number && formik.errors.number\n            ? <div className=\"error ml-2\">{formik.errors.number}</div>\n            : null}\n        </div>\n\n        <div className=\"form-group w-100\">\n          <input\n            className=\"form-control m-2\"\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            {...formik.getFieldProps ('name')}\n            onFocus={handleInputFocus}\n          />\n          {formik.touched.name && formik.errors.name\n            ? <div className=\"error ml-2\">{formik.errors.name}</div>\n            : null}\n        </div>\n\n        <div className=\"d-flex flex-row\">\n          <div className=\"form-group w-100\">\n\n            <input\n              className=\"form-control m-2\"\n              id=\"expiry\"\n              name=\"expiry\"\n              type=\"number\"\n              pattern=\"\\d\\d/\\d\\d\"\n\n              placeholder=\"Expiry date\"\n              {...formik.getFieldProps ('expiry')}\n              onFocus={handleInputFocus}\n            />\n            {formik.touched.expiry && formik.errors.expiry\n              ? <p className=\"error ml-2\">{formik.errors.expiry}</p>\n              : null}\n          </div>\n\n          <div className=\"form-group w-100 ml-2 \">\n            <input\n              className=\"form-control m-2\"\n              id=\"cvc\"\n              name=\"cvc\"\n              type=\"number\"\n              placeholder=\"CVC\"\n              {...formik.getFieldProps ('cvc')}\n              onFocus={handleInputFocus}\n            />\n            {formik.touched.cvc && formik.errors.cvc\n              ? <div className=\"error ml-2\">{formik.errors.cvc}</div>\n              : null}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n\n          <button\n            //disabled={!validateForm ()}\n            type=\"submit\"\n            className={`btn btn-${buttonTitle !== 'Success' ? 'primary' : 'success'} mt-3`}\n            disabled={!(formik.isValid && formik.dirty)}\n          >\n            {buttonTitle == 'Proccessing' &&\n              <Spinner animation=\"border\" variant=\"light\" />}\n\n            {buttonTitle}\n          </button>\n\n        </div>\n\n      </div>\n    </form>\n  );\n}\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":4,"column":22,"nodeType":"154","messageId":"155","endLine":4,"endColumn":32},{"ruleId":"152","severity":1,"message":"156","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":28,"column":6,"nodeType":"159","endLine":28,"endColumn":8,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"161","line":3,"column":3,"nodeType":"154","messageId":"155","endLine":3,"endColumn":15},{"ruleId":"152","severity":1,"message":"162","line":13,"column":9,"nodeType":"154","messageId":"155","endLine":13,"endColumn":20},{"ruleId":"152","severity":1,"message":"163","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"164","line":5,"column":3,"nodeType":"154","messageId":"155","endLine":5,"endColumn":23},{"ruleId":"152","severity":1,"message":"165","line":1,"column":34,"nodeType":"154","messageId":"155","endLine":1,"endColumn":43},{"ruleId":"152","severity":1,"message":"166","line":19,"column":9,"nodeType":"154","messageId":"155","endLine":19,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":26,"column":27,"nodeType":"169","messageId":"170","endLine":26,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":248,"column":11,"nodeType":"173","endLine":248,"endColumn":71},{"ruleId":"167","severity":1,"message":"168","line":43,"column":29,"nodeType":"169","messageId":"170","endLine":43,"endColumn":31},{"ruleId":"157","severity":1,"message":"174","line":53,"column":6,"nodeType":"159","endLine":53,"endColumn":8,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"168","line":57,"column":27,"nodeType":"169","messageId":"170","endLine":57,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":205,"column":11,"nodeType":"173","endLine":205,"endColumn":72},{"ruleId":"152","severity":1,"message":"176","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},{"ruleId":"152","severity":1,"message":"177","line":6,"column":11,"nodeType":"154","messageId":"155","endLine":6,"endColumn":13},{"ruleId":"152","severity":1,"message":"178","line":7,"column":11,"nodeType":"154","messageId":"155","endLine":7,"endColumn":18},{"ruleId":"152","severity":1,"message":"179","line":8,"column":11,"nodeType":"154","messageId":"155","endLine":8,"endColumn":15},{"ruleId":"152","severity":1,"message":"180","line":9,"column":11,"nodeType":"154","messageId":"155","endLine":9,"endColumn":20},{"ruleId":"152","severity":1,"message":"163","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"181","line":6,"column":19,"nodeType":"154","messageId":"155","endLine":6,"endColumn":29},{"ruleId":"157","severity":1,"message":"182","line":38,"column":6,"nodeType":"159","endLine":38,"endColumn":8,"suggestions":"183"},{"ruleId":"167","severity":1,"message":"184","line":46,"column":20,"nodeType":"169","messageId":"170","endLine":46,"endColumn":22},{"ruleId":"152","severity":1,"message":"185","line":4,"column":5,"nodeType":"154","messageId":"155","endLine":4,"endColumn":11},{"ruleId":"157","severity":1,"message":"186","line":32,"column":6,"nodeType":"159","endLine":32,"endColumn":8,"suggestions":"187"},{"ruleId":"152","severity":1,"message":"188","line":2,"column":7,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},{"ruleId":"152","severity":1,"message":"165","line":2,"column":3,"nodeType":"154","messageId":"155","endLine":2,"endColumn":12},{"ruleId":"152","severity":1,"message":"189","line":3,"column":9,"nodeType":"154","messageId":"155","endLine":3,"endColumn":13},{"ruleId":"152","severity":1,"message":"190","line":3,"column":15,"nodeType":"154","messageId":"155","endLine":3,"endColumn":25},{"ruleId":"152","severity":1,"message":"191","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":16},{"ruleId":"152","severity":1,"message":"192","line":14,"column":10,"nodeType":"154","messageId":"155","endLine":14,"endColumn":17},{"ruleId":"152","severity":1,"message":"193","line":14,"column":19,"nodeType":"154","messageId":"155","endLine":14,"endColumn":28},{"ruleId":"148","replacedBy":"194"},{"ruleId":"150","replacedBy":"195"},{"ruleId":"152","severity":1,"message":"196","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":51,"column":9,"nodeType":"173","endLine":51,"endColumn":42},{"ruleId":"167","severity":1,"message":"184","line":145,"column":26,"nodeType":"169","messageId":"170","endLine":145,"endColumn":28},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'useDispach' is defined but never used.","Identifier","unusedVar","'TestPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'persistStore' is defined but never used.","'PersistGate' is defined but never used.","'Controls' is defined but never used.","'setUserSpare1byEmail' is defined but never used.","'useEffect' is defined but never used.","'onSignUpClick' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cookies.user', 'dispatch', and 'history'. Either include them or remove the dependency array.",["200"],"'sendMail' is defined but never used.","'to' is assigned a value but never used.","'subject' is assigned a value but never used.","'text' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","'SECRET_KEY' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'match'. Either include them or remove the dependency array.",["201"],"Expected '===' and instead saw '=='.","'sha256' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'match.params.token'. Either include them or remove the dependency array.",["202"],"'nodemailer' is assigned a value but never used.","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'connect' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.",["197"],["198"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [user]",{"range":"211","text":"212"},"Update the dependencies array to be: [cookies.user, dispatch, history]",{"range":"213","text":"214"},"Update the dependencies array to be: [history, match]",{"range":"215","text":"216"},"Update the dependencies array to be: [history, match.params.id, match.params.token]",{"range":"217","text":"218"},[995,997],"[user]",[1818,1820],"[cookies.user, dispatch, history]",[1247,1249],"[history, match]",[935,937],"[history, match.params.id, match.params.token]"]